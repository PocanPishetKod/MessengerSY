// <auto-generated />
using System;
using MessengerSY.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MessengerSY.Data.Migrations
{
    [DbContext(typeof(MessengerDbContext))]
    [Migration("20190327082745_AddProp_LastMessageSendDate_ToChat")]
    partial class AddProp_LastMessageSendDate_ToChat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MessengerSY.Core.Domain.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreationDate");

                    b.Property<int>("CreatorId");

                    b.Property<bool>("IsGroup");

                    b.Property<bool>("IsSecret");

                    b.Property<DateTime?>("LastMessageSendDate");

                    b.Property<string>("Title")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("MessengerSY.Core.Domain.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactName")
                        .HasMaxLength(50);

                    b.Property<int>("ContactOwnerId");

                    b.Property<int?>("LinkedUserProfileId");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.HasIndex("ContactOwnerId");

                    b.HasIndex("LinkedUserProfileId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("MessengerSY.Core.Domain.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChatId");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("SendDate");

                    b.Property<int>("SenderId");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("MessengerSY.Core.Domain.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Expires");

                    b.Property<string>("Token")
                        .IsRequired();

                    b.Property<int>("UserProfileId");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("MessengerSY.Core.Domain.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Avatar");

                    b.Property<string>("Nickname")
                        .HasMaxLength(30);

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.Property<DateTime>("RegistrationDate");

                    b.HasKey("Id");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("MessengerSY.Core.Domain.UserProfileChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChatId");

                    b.Property<int>("UserProfileId");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserProfileChat");
                });

            modelBuilder.Entity("MessengerSY.Core.Domain.Chat", b =>
                {
                    b.HasOne("MessengerSY.Core.Domain.UserProfile", "Creator")
                        .WithMany("CreatedChats")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MessengerSY.Core.Domain.Contact", b =>
                {
                    b.HasOne("MessengerSY.Core.Domain.UserProfile", "ContactOwner")
                        .WithMany("Contacts")
                        .HasForeignKey("ContactOwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MessengerSY.Core.Domain.UserProfile", "LinkedUserProfile")
                        .WithMany("AddedMe")
                        .HasForeignKey("LinkedUserProfileId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MessengerSY.Core.Domain.Message", b =>
                {
                    b.HasOne("MessengerSY.Core.Domain.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MessengerSY.Core.Domain.UserProfile", "Sender")
                        .WithMany("SendMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MessengerSY.Core.Domain.RefreshToken", b =>
                {
                    b.HasOne("MessengerSY.Core.Domain.UserProfile", "UserProfile")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MessengerSY.Core.Domain.UserProfileChat", b =>
                {
                    b.HasOne("MessengerSY.Core.Domain.Chat", "Chat")
                        .WithMany("Participants")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MessengerSY.Core.Domain.UserProfile", "UserProfile")
                        .WithMany("Chats")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
